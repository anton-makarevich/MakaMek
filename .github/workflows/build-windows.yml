name: Build and Package Windows App (Linux Runner)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Run on version tags
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.x

      - name: Extract version from Directory.Build.props
        id: extract_version
        shell: bash
        run: |
          VERSION=$(grep -oP '(?<=<Version>).*(?=</Version>)' Directory.Build.props)
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version extracted: $VERSION"

      - name: Install Velopack CLI
        run: |
          dotnet tool install --global vpk

      - name: Build Windows App
        run: |
          cd src/MakaMek.Avalonia/MakaMek.Avalonia.Desktop
          dotnet publish -c Release -r win-x64 -o publish

      - name: Setup osslsigncode
        run: |
          sudo apt-get update
          sudo apt-get install -y osslsigncode
          mkdir -p certs
          echo "${{ secrets.WIN_SIGN_CERTIFICATE }}" > certs/sign.crt
          echo "${{ secrets.WIN_SIGN_CERT_KEY }}" > certs/sign.key
          chmod 600 certs/*

      - name: Sign Windows Executable
        run: |
          cd src/MakaMek.Avalonia/MakaMek.Avalonia.Desktop/publish
          
          # Function to sign a single file
          sign_file() {
            local file=$1
            if file "$file" | grep -q "PE32"; then
              echo "Signing $file"
              temp_file="${file}.unsigned"
              mv "$file" "$temp_file"
              osslsigncode sign \
                -certs "../../../../certs/sign.crt" \
                -key "../../../../certs/sign.key" \
                -n "MakaMek" \
                -i "https://makamek.nl" \
                -t "http://timestamp.digicert.com" \
                -in "$temp_file" \
                -out "$file"
              rm "$temp_file"
            fi
          }
          
          # Sign all .exe and .dll files
          for file in *.exe *.dll; do
            [ -f "$file" ] || continue
            sign_file "$file"
          done
          
          # Clean up sensitive files
          rm -rf ../../../../certs
      
      - name: Create Installer
        run: |
          cd src/MakaMek.Avalonia/MakaMek.Avalonia.Desktop
          vpk pack --packId nl.sanetby.makamek --packVersion ${{ env.APP_VERSION }} --packDir publish --mainExe MakaMek.exe

      # For tagged releases only
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: src/MakaMek.Avalonia/MakaMek.Avalonia.Desktop/Releases/*Setup.exe
          draft: false
          prerelease: false
          generate_release_notes: true
          
      # For all builds (including main branch pushes and manual runs)
      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MakaMek-Windows-Installer
          path: src/MakaMek.Avalonia/MakaMek.Avalonia.Desktop/Releases/*Setup.exe
          retention-days: 90  # Keep artifacts for 90 days
